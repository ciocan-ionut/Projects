     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 03                          a DB 3
    15 00000001 0100                        b DW 1
    16 00000003 08000000                    c DD 8
    17 00000007 0200000000000000            d DQ 2
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 8B1D[03000000]                  mov EBX, [c]
    23 00000006 B900000000                      mov ECX, 0
    24 0000000B A1[07000000]                    mov EAX, [d]
    25 00000010 8B15[0B000000]                  mov EDX, [d+4]
    26 00000016 0305[07000000]                  add EAX, [d]
    27 0000001C 1315[0B000000]                  adc EDX, [d+4]
    28 00000022 0305[07000000]                  add EAX, [d]
    29 00000028 1305[0B000000]                  adc EAX, [d+4]
    30 0000002E 19C3                            sbb EBX, EAX
    31 00000030 29D1                            sub ECX, EDX 
    32 00000032 B800000000                      mov EAX, 0
    33 00000037 A0[00000000]                    mov AL, [a]
    34 0000003C 662B05[01000000]                sub AX, [b]
    35 00000043 BA00000000                      mov EDX, 0
    36 00000048 01C3                            add EBX, EAX
    37 0000004A 11D1                            adc ECX, EDX
    38                                          ; c - (d + d + d) + (a - b) = 4
    39                                          ; exit(0)
    40 0000004C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 0000004E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
