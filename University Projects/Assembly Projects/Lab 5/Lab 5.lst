     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 01020304                    S1 db 1, 2, 3, 4
    15                                      l1 equ $-S1
    16 00000004 050607                      S2 db 5, 6, 7
    17                                      l2 equ $-S2
    18 00000007 00<rept>                    D times l1+l2 db 0
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 B904000000                      mov ECX, l1
    24 00000005 E314                            jecxz jump_S1
    25 00000007 BE00000000                      mov ESI, 0
    26                                          
    27                                          while_S1:
    28 0000000C 8A86[00000000]                  mov AL, [S1+ESI]
    29 00000012 8886[07000000]                  mov [D+ESI], AL
    30 00000018 46                              inc ESI
    31 00000019 E2F1                            loop while_S1
    32                                          
    33                                          jump_S1:
    34 0000001B B903000000                      mov ECX, l2
    35 00000020 E315                            jecxz final
    36 00000022 BF02000000                      mov EDI, l2-1
    37                                          
    38                                          while_S2:
    39 00000027 8A87[04000000]                  mov AL, [S2+EDI]
    40 0000002D 8886[07000000]                  mov [D+ESI], AL
    41 00000033 4F                              dec EDI
    42 00000034 46                              inc ESI
    43 00000035 E2F0                            loop while_S2
    44                                          
    45                                          final:
    46                                          ; exit(0)
    47 00000037 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    48 00000039 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
