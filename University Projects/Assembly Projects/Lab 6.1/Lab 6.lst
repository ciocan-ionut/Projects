     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1032341234128967DC-         A dd 12343210h, 67891234h, 0123FEDCh
    14 00000009 FE2301             
    15                                      l equ ($-A)/4
    16 0000000C 00<rept>                    B1 times l db 0
    17 0000000F 00<rept>                    B2 times l db 0
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; ...
    22 00000000 B903000000                      mov ECX, l
    23 00000005 E325                            jecxz final
    24 00000007 BE[00000000]                    mov ESI, A
    25 0000000C BF[0C000000]                    mov EDI, B1
    26                                          
    27                                          while_1:
    28 00000011 A4                              MOVSB
    29 00000012 83C603                          add ESI, 3
    30 00000015 E2FA                            loop while_1
    31                                          
    32 00000017 B903000000                      mov ECX, l
    33 0000001C BE[00000000]                    mov ESI, A
    34 00000021 BF[0F000000]                    mov EDI, B2
    35                                          
    36                                          while_2:
    37 00000026 83C603                          add ESI, 3
    38 00000029 A4                              MOVSB
    39 0000002A E2FA                            loop while_2
    40                                          
    41                                          final
    41          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    42                                          ; exit(0)
    43 0000002C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000002E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
